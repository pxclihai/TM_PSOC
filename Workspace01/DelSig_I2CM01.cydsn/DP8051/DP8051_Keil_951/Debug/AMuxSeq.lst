C51 COMPILER V9.51   AMUXSEQ                                                               10/28/2016 13:50:54 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE AMUXSEQ
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\AMuxSeq.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\AMuxSeq.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(
                    -.\DP8051\DP8051_Keil_951\Debug/AMuxSeq.lst) CD OT(2,SIZE) OJ(.\DP8051\DP8051_Keil_951\Debug\AMuxSeq.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: AMuxSeq.c
   3          * Version 1.80
   4          *
   5          *  Description:
   6          *    This file contains functions for the AMuxSeq.
   7          *
   8          *   Note:
   9          *
  10          *******************************************************************************
  11          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include "AMuxSeq.h"
  18          
  19          uint8 AMuxSeq_initVar = 0u;
  20          
  21          
  22          /*******************************************************************************
  23          * Function Name: AMuxSeq_Start
  24          ********************************************************************************
  25          * Summary:
  26          *  Disconnect all channels. The next time Next is called, channel 0 will be
  27          *  connected.
  28          *
  29          * Parameters:
  30          *  void
  31          *
  32          * Return:
  33          *  void
  34          *
  35          *******************************************************************************/
  36          void AMuxSeq_Start(void)
  37          {
  38   1          AMuxSeq_DisconnectAll();
  39   1          AMuxSeq_initVar = 1u;
  40   1      }
  41          
  42          
  43          /*******************************************************************************
  44          * Function Name: AMuxSeq_Init
  45          ********************************************************************************
  46          * Summary:
  47          *  Disconnect all channels. The next time Next is called, channel 0 will be
  48          *  connected.
  49          *
  50          * Parameters:
  51          *  void
  52          *
  53          * Return:
C51 COMPILER V9.51   AMUXSEQ                                                               10/28/2016 13:50:54 PAGE 2   

  54          *  void
  55          *
  56          *******************************************************************************/
  57          void AMuxSeq_Init(void)
  58          {
  59   1          AMuxSeq_DisconnectAll();
  60   1      }
  61          
  62          
  63          /*******************************************************************************
  64          * Function Name: AMuxSeq_Stop
  65          ********************************************************************************
  66          * Summary:
  67          *  Disconnect all channels. The next time Next is called, channel 0 will be
  68          *  connected.
  69          *
  70          * Parameters:
  71          *  void
  72          *
  73          * Return:
  74          *  void
  75          *
  76          *******************************************************************************/
  77          void AMuxSeq_Stop(void)
  78          {
  79   1          AMuxSeq_DisconnectAll();
  80   1      }
  81          
  82          #if (AMuxSeq_MUXTYPE == AMuxSeq_MUX_DIFF)
  83          
  84          /*******************************************************************************
  85          * Function Name: AMuxSeq_Next
  86          ********************************************************************************
  87          * Summary:
  88          *  Disconnects the previous channel and connects the next one in the sequence.
  89          *  When Next is called for the first time after Init, Start, Enable, Stop, or
  90          *  DisconnectAll, it connects channel 0.
  91          *
  92          * Parameters:
  93          *  void
  94          *
  95          * Return:
  96          *  void
  97          *
  98          *******************************************************************************/
  99          void AMuxSeq_Next(void)
 100          {
 101   1          AMuxSeq_CYAMUXSIDE_A_Next();
 102   1          AMuxSeq_CYAMUXSIDE_B_Next();
 103   1      }
 104          
 105          
 106          /*******************************************************************************
 107          * Function Name: AMuxSeq_DisconnectAll
 108          ********************************************************************************
 109          * Summary:
 110          *  This function disconnects all channels. The next time Next is called, channel
 111          *  0 will be connected.
 112          *
 113          * Parameters:
 114          *  void
 115          *
C51 COMPILER V9.51   AMUXSEQ                                                               10/28/2016 13:50:54 PAGE 3   

 116          * Return:
 117          *  void
 118          *
 119          *******************************************************************************/
 120          void AMuxSeq_DisconnectAll(void)
 121          {
 122   1          AMuxSeq_CYAMUXSIDE_A_DisconnectAll();
 123   1          AMuxSeq_CYAMUXSIDE_B_DisconnectAll();
 124   1      }
 125          
 126          
 127          /*******************************************************************************
 128          * Function Name: AMuxSeq_GetChannel
 129          ********************************************************************************
 130          * Summary:
 131          *  The currently connected channel is retuned. If no channel is connected
 132          *  returns -1.
 133          *
 134          * Parameters:
 135          *  void
 136          *
 137          * Return:
 138          *  The current channel or -1.
 139          *
 140          *******************************************************************************/
 141          int8 AMuxSeq_GetChannel(void)
 142          {
 143   1          return AMuxSeq_CYAMUXSIDE_A_curChannel;
 144   1      }
 145          
 146          #else
              
              /*******************************************************************************
              * Function Name: AMuxSeq_GetChannel
              ********************************************************************************
              * Summary:
              *  The currently connected channel is retuned. If no channel is connected
              *  returns -1.
              *
              * Parameters:
              *  void
              *
              * Return:
              *  The current channel or -1.
              *
              *******************************************************************************/
              int8 AMuxSeq_GetChannel(void)
              {
                  return AMuxSeq_curChannel;
              }
              
              #endif
 168          
 169          
 170          /* [] END OF FILE */
C51 COMPILER V9.51   AMUXSEQ                                                               10/28/2016 13:50:54 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION AMuxSeq_Start (BEGIN)
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0000 120000      R     LCALL   AMuxSeq_DisconnectAll
                                           ; SOURCE LINE # 39
0003 900000      R     MOV     DPTR,#AMuxSeq_initVar
0006 7401              MOV     A,#01H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
0009 22                RET     
             ; FUNCTION AMuxSeq_Start (END)

             ; FUNCTION AMuxSeq_Init (BEGIN)
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0000 120000      R     LCALL   AMuxSeq_DisconnectAll
                                           ; SOURCE LINE # 60
0003 22                RET     
             ; FUNCTION AMuxSeq_Init (END)

             ; FUNCTION AMuxSeq_Stop (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0000 120000      R     LCALL   AMuxSeq_DisconnectAll
                                           ; SOURCE LINE # 80
0003 22                RET     
             ; FUNCTION AMuxSeq_Stop (END)

             ; FUNCTION AMuxSeq_Next (BEGIN)
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0000 120000      E     LCALL   AMuxSeq_CYAMUXSIDE_A_Next
                                           ; SOURCE LINE # 102
0003 120000      E     LCALL   AMuxSeq_CYAMUXSIDE_B_Next
                                           ; SOURCE LINE # 103
0006 22                RET     
             ; FUNCTION AMuxSeq_Next (END)

             ; FUNCTION AMuxSeq_DisconnectAll (BEGIN)
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
0000 120000      E     LCALL   AMuxSeq_CYAMUXSIDE_A_DisconnectAll
                                           ; SOURCE LINE # 123
0003 120000      E     LCALL   AMuxSeq_CYAMUXSIDE_B_DisconnectAll
                                           ; SOURCE LINE # 124
0006 22                RET     
             ; FUNCTION AMuxSeq_DisconnectAll (END)

             ; FUNCTION AMuxSeq_GetChannel (BEGIN)
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0000 900000      E     MOV     DPTR,#AMuxSeq_CYAMUXSIDE_A_curChannel
0003 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   AMUXSEQ                                                               10/28/2016 13:50:54 PAGE 5   

0004 FF                MOV     R7,A
                                           ; SOURCE LINE # 144
0005         ?C0006:
0005 22                RET     
             ; FUNCTION AMuxSeq_GetChannel (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     38    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
